version: v2beta1
name: csi-driver-host-path

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  app:
    image: k8s.m.daocloud.io/sig-storage/hostpathplugin:v1.13.0
    dockerfile: ./Dockerfile

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  app:
    # This deployment uses `kubectl` but you can also define `helm` deployments
    kubectl:
      manifests:
        - deploy/debug-pod.yaml

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
#    imageSelector: k8s.m.daocloud.io/sig-storage/hostpathplugin:v1.13.0
    labelSelector:
      app: dev
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    devImage: registry.cn-hangzhou.aliyuncs.com/acejilam/mygo:v1.21.5
    # Sync files between the local filesystem and the development container
    sync:
      - path: ./:/data
        excludePaths:
          - vendor/
          - bin/
          - .git/
          - .devspace/
        disableDownload: true
    # Open a terminal and use the following command to start it
    terminal:
      workDir: /data
      command: ./scripts/devspace_start.sh
      enabled: true
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - gitCredentials: true
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: "33333"
